// Generated by CoffeeScript 1.7.1
(function() {
  var dataStore, rsltsObj, _;

  _ = require('lodash');

  dataStore = require('./ds');

  rsltsObj = function(rcrds, category, criteria) {
    var rcrd, rslts, _i, _len;
    rslts = {};
    rslts[category] = criteria;
    rslts['placement count'] = rcrds.length;
    rslts['Impressions'] = 0;
    rslts['Clicks'] = 0;
    rslts['CT TV LQS'] = 0;
    rslts['VT TV LQS'] = 0;
    rslts['TV LQS'] = 0;
    rslts['placements'] = rcrds;
    for (_i = 0, _len = rcrds.length; _i < _len; _i++) {
      rcrd = rcrds[_i];
      rslts['Impressions'] += rcrd._doc['Impressions'];
      rslts['Clicks'] += rcrd._doc['Clicks'];
      rslts['CT TV LQS'] += rcrd._doc['CT TV LQS'];
      rslts['VT TV LQS'] += rcrd._doc['VT TV LQS'];
      rslts['TV LQS'] += rcrd._doc['TV LQS'];
    }
    return rslts;
  };

  module.exports = function(server, db_host, db_name) {
    var db;
    dataStore.init(db_host, db_name);
    db = dataStore.models();
    server.get('/hello/:name', function(req, res, next) {
      res.send({
        hello: req.params.name,
        date: new Date
      });
      return next();
    });
    server.get('/api/placements', function(req, res, next) {
      return db.Placements.find(function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/id/:id', function(req, res, next) {
      return db.Placements.findById(req.params.id, function(err, doc) {
        if (err) {
          return err;
        }
        if (doc) {
          return res.send(doc);
        } else {
          return res.send({});
        }
      });
    });
    server.get('/api/placements/:placement', function(req, res, next) {
      return db.Placements.find({
        'Placement': req.params.placement
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'placement', req.params.placement);
        return res.send(rslts);
      });
    });
    server.get('/api/campaigns', function(req, res, next) {
      return db.Placements.distinct('Campaign', function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          campaigns: rslts
        });
      });
    });
    server.get('/api/campaigns/:campaign_id', function(req, res, next) {
      return db.Placements.find({
        Campaign: req.params.campaign_id
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'campaign', req.params.campaign);
        return res.send(rslts);
      });
    });
    server.get('/api/sites', function(req, res, next) {
      return db.Placements.distinct('Site (DFA)', function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          sites: rslts
        });
      });
    });
    server.get('/api/sites/:site', function(req, res, next) {
      return db.Placements.find({
        'Site (DFA)': req.params.site
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'site', req.params.site);
        return res.send(rslts);
      });
    });
    server.get('/api/groups', function(req, res, next) {
      return db.Placements.distinct('Placement Group', function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          'placement groups': rslts
        });
      });
    });
    server.get('/api/groups/:group', function(req, res, next) {
      return db.Placements.find({
        'Placement Group': req.params.group
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'group', req.params.group);
        return res.send(rslts);
      });
    });
    server.get('/api/tactics', function(req, res, next) {
      return db.Placements.distinct('Placement Tactic', function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          'placement tactics': rslts
        });
      });
    });
    server.get('/api/tactics/:tactic', function(req, res, next) {
      return db.Placements.find({
        'Placement Tactic': req.params.tactic
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'tactic', req.params.tactic);
        return res.send(rslts);
      });
    });
    server.get('/api/segments', function(req, res, next) {
      return db.Placements.distinct('DMP Segment', function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          'total placements': count,
          'dmp segments': rslts
        });
      });
    });
    return server.get('/api/segments/:segment', function(req, res, next) {
      return db.Placements.find({
        'DMP Segment': req.params.segment
      }, function(err, rcrds) {
        var rslts;
        if (err) {
          return err;
        }
        rslts = rsltsObj(rcrds, 'segment', req.params.segment);
        return res.send(rslts);
      });
    });
  };

}).call(this);
