// Generated by CoffeeScript 1.7.1
(function() {
  var db_init, _;

  _ = require('lodash');

  db_init = require('./db');

  module.exports = function(server, db_host, db_name) {
    var db;
    db = db_init(db_host, db_name);
    server.get('/hello/:name', function(req, res, next) {
      res.send({
        hello: req.params.name,
        date: new Date
      });
      return next();
    });
    server.get('/api/placements', function(req, res, next) {
      return db.Placements.find(function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/:id', function(req, res, next) {
      return db.Placements.findById(req.params.id, function(err, doc) {
        if (err) {
          return err;
        }
        return res.send(doc);
      });
    });
    server.get('/api/placements/campaign/:campaign_id', function(req, res, next) {
      return db.Placements.find({
        Campaign: req.params.campaign_id
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/site/:site', function(req, res, next) {
      return db.Placements.find({
        'Site (DFA)': req.params.site
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/placement/:placement', function(req, res, next) {
      return db.Placements.find({
        'Placement': req.params.placement
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/group/:group', function(req, res, next) {
      return db.Placements.find({
        'Placement Group': req.params.group
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    server.get('/api/placements/tactic/:tactic', function(req, res, next) {
      return db.Placements.find({
        'Placement Tactic': req.params.tactic
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
    return server.get('/api/placements/segment/:segment', function(req, res, next) {
      return db.Placements.find({
        'DMP Segment': req.params.segment
      }, function(err, rslts) {
        var count;
        if (err) {
          return err;
        }
        count = rslts.length;
        return res.send({
          total: count,
          placements: rslts
        });
      });
    });
  };

}).call(this);
